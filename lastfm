#!/bin/sh
# Copyright (c) 2011, Marcus Carlsson <carlsson.marcus@gmail.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of the author nor the names of other
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

doencode=true

function show_help() {
    cat << EOF
Usage: $(basename $0) [-] [user query [ [loved|personal|playlist|neighbours|recommended]] | [tag|globaltags|artist query] ] [query]

    default: artist
        artist:         creates a stream for similarartists matching the query.
        tag:            creates a stream from given tags (max: 3 tags)
        globaltags:     creates a stream for a given tag (max: 1 tag)
        user:           creates a stream for a given user. Takes a second argument for [loved|personal|playlist|neighbours|recommended] with recommended as default.
    -h --help   Show this help.
    -           Print the output instead of copy to clipboard.
EOF
    exit 1;
}

[ "$1" = '-h' -o "$1" = '--help' -o $# -lt 1 ] && show_help

if [ "$1" = '-' ]; then
    out=true; shift
fi

encode() {
    string=$*
    echo $(python2 -c "from urllib import quote; print quote('''$string''')")
}

case "$1" in
    tag)
        type='tag'; shift
        query=''
        for tag in "$@"; do
            tag=$(encode $tag)
            query="$query$tag*"
        done
        query=`echo $query|sed 's/.$//'` # Strip last char

        unset doencode
        ;;
    globaltags)
        type='globaltags'; shift
        query=$*
        ;;
    user)
        type='user'; shift
        query=$1; shift

        case "$1" in
            loved) extra='/loved';;
            personal) extra='/personal';;
            playlist) extra='/playlist';;
			neighbours) extra='/neighbours' ;;
            *) extra='/recommended'
        esac
        ;;
    artist|*)
        type='artist'
        extra='/similarartists'
        if [ "$1" = 'artist' ]; then
            shift
        fi
        query=$*
esac
        
lastfm="lastfm://$type/"
if ! [ $doencode ]; then
    lastfm=$lastfm$query$extra
else
    query=$(encode $query)
    lastfm=$lastfm$query$extra
fi

if [ $out ]; then
    echo $lastfm
else
    echo $lastfm | xclip
fi
exit
