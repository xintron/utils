#!/bin/sh
# Copyright (c) 2011, Marcus Carlsson <carlsson.marcus@gmail.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of the author nor the names of other
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Check so that imagemagick is present
which convert &> /dev/null || echo 'Eh, how did you think this would work? You don''t have ImageMagick installed and believe that we can magically modify and merge images just like that? Stupid! Install ImageMagick and "please come again"'

help_text='usage: '$0' [-h] [-b] background scrot1 scrot2 [scrot3...]

Create an awesome image to show your friends with the latest scrot of your
android device (or any images you want to apply on the background of your
choice).

optional arguments:
 -h, --help     show this help message and exit
 -b, --blur     blur the background-image'

show_help () {
    echo "$help_text"
    exit 1;
}

while [ ! -z $1 ]; do
    case "$1" in
        '-b'|'--blur')
                blur=true
                shift
            ;;
        '-h'|'--help')
                show_help
            ;;
        *)
            break
            ;;
    esac
done

[[ $# -ge 2 ]] || show_help

background=$1
shift

out=()

add_shadow () {
    shadow=$(echo $1 | sed -e 's/\.[a-z0-9]\+$//i')-shadow.$(echo $1 | sed -e 's/.*\.\([a-z0-9]\+\)$/\1/i')
    out[${#out[*]}]=$shadow
    convert $1 \( +clone -background black -shadow 90x5+0+0 \) +swap -background none -layers merge +repage $shadow
}

# Merge all images to one awesome image!
bazinga () {
    convert $background \( $(echo ${out[@]}) +append \) -gravity center -composite droid_$(date +'%s.png')
}

echo 'Adding shadows'
i=0
for file in $*; do
    let 'i+=1'
    add_shadow $file
done

if [ -n "$blur" ]; then
    tmp_background=$(echo $background | sed -e 's/\.[a-z0-9]\+$//i')-tmp.$(echo $background | sed -e 's/.*\.\([a-z0-9]\+\)$/\1/i')

    # Add blur
    echo 'Blurring background'
    convert $background -gaussian-blur 12x4 $tmp_background

    background=$tmp_background
fi

echo 'Generating image, yay!'
bazinga
    
# Cleanup time!
if [ -n "$tmp_background" ]; then
    rm $tmp_background
fi
for file in ${out[@]}; do
    rm $file
done

echo -e "::\033[38;5;012m Now we're done. Please grab yourself a cup of coffee, you deserve it!\033[0m"

exit
