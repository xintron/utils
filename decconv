#!/bin/sh
# Copyright (c) 2012, Marcus Carlsson <carlsson.marcus@gmail.com>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Marcus Carlsson nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
command -v bc >/dev/null 2>&1
if (( $? )); then
    echo "bc is required to do the conversion"
    exit 1
fi

help_text="`basename $0` [-o OUTPUT_BASE] [-i INPUT_BASE] expression
  Base: 2=binary, 8=octal, 10=decimal, 16=hexadecimal

  -o    Output base
  -i    Input base"
show_help() {
    echo -e "$help_text"
    [ $# -gt 0 ] && exit $1 || exit 1
}

ibase=10
obase=10
case $1 in
    "-h")
        show_help 0
        ;;
    -o|-o*)
        if [ ${#1} -gt 2 ]; then
            obase=${1#-o}
            shift ${#1}
        else
            shift
            obase=$1
        fi
        shift
        ;;
    -i|-i*)
        if [ ${#1} -gt 2 ]; then
            ibase=${1#-i}
            shift ${#1}
        else
            shift
            ibase=$1
        fi
        shift
        ;;
esac

[ $# -eq 0 ] && show_help

exp=$@

echo "ibase=$ibase; obase=$obase; $exp";

echo "ibase=$ibase; obase=$obase; $exp" | bc
